services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: nodejs
    container_name: nodejs
    restart: unless-stopped
    env_file: .env
    ports:
      - "80:8080"
    volumes:
      - ./server:/home/node/app
      - ./server/node_modules:/home/node/app/node_modules
    networks:
      - app-network
    command: npm start
    depends_on:
      - database
  client:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: nodejs
    container_name: nodejs
    restart: unless-stopped
    env_file: .env
    ports:
      - "80:8081"
    volumes:
      - ./sever:/home/node/app
      - ./client/node_modules:/home/node/app/node_modules
    networks:
      - app-network
    command: npm start
    depends_on:
      - server
  database:
    image: 'postgres:latest'
    env_file: .env
    ports:
      - 15432:5432
    volumes:
      - ./db-data/:/var/lib/postgresql/data/
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
  nginx:
    image: nginx:latest
    container_name: reverse_proxy
    volumes:
      - ./reverse_proxy/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network
    depends_on:
      - server
      - client
      - database
networks:
  app-network: